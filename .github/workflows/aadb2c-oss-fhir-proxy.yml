# This is a basic workflow to help you get started with Actions

name: aadb2c-oss-fhir-prox

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  TEMP_DIR_PATH: './tmp'
  FHIR_PROXY_BICEP_NAME: 'fhir-proxy.bicep'
  FHIR_ENDPT_DOMAIN: '.fhir.azurehealthcareapis.com'

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read

jobs:

  # job1: deploy the ahds workspace with a fhir service
  deploy-infra-fhir-service:
    #if: ${{ false }} #disables the job
    runs-on: ubuntu-latest
    environment: sample
    outputs:
      uniqueSuffix: ${{ steps.get-unique-names.outputs.uniqueSuffix }} 
      fhirWorkspaceName: ${{ steps.get-unique-names.outputs.fhirWorkspaceName }} 
      fhirName: ${{ steps.get-unique-names.outputs.fhirName }} 
      
    steps:

      # checkout 
    - uses: actions/checkout@v3

      # Log into Azure
    - name: az-login
      uses: Azure/login@v1.4.6
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
      # Hash the resource group's ID so it's unique but also repeatable
      # steps: 
      # 1. retrieve the resouceGroup's id property
      # 2. hash the id and take the first 8 chars of the hash
      # 3. set the output using the hash substring

      # ************* CHNANGED SECRETS RG AND HARDCODED REF TO FHIR SERVER VIA SUFFIC
    - name: generate unique suffix 
      id: get-unique-names
      shell: bash
      run: |
        rsGroupId=$(az group list --query "[?name=='${{ secrets.AZURE_B2C_RG }}'].id" -o tsv)
        suffix=$(echo -n $rsGroupId | shasum | cut -c1-6)
        echo "::set-output name=uniqueSuffix::$suffix"
        
        suffix="35d75573"
        echo "::set-output name=fhirWorkspaceName::ws$suffix"
        echo "::set-output name=fhirName::fhir$suffix"
        
        unset rsGroupId
        unset suffix
               
      # Deploy uisng bicep
      # Important note: you cannot set the fhir service endpoint, it is automatically set by
      # resource based on the workspaceName and the fhirName with a format of
      # 'https://${workspaceName}-${fhirName}.fhir.azurehealthcareapis.com' 
      # @TODO: change fhir+Suffix to be unique within the AHDS workspace

      # ************* SKIPPED FHIR SERVER DEPLOYMENT
    # - name: deploy-fhir
    #   uses: azure/arm-deploy@v1.0.8
    #   with:
    #     subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    #     resourceGroupName: ${{ secrets.AZURE_B2C_RG }}
    #     template: ./fhir-api.bicep
    #     parameters: 'workspaceName=${{steps.get-unique-names.outputs.fhirWorkspaceName}} 
    #       fhirName=${{steps.get-unique-names.outputs.fhirName}}'
    #     failOnStdErr: false

  # job2: deploy the oss fhir proxy 
  deploy-and-build-fhir-proxy:
    needs: [deploy-infra-fhir-service]
    runs-on: ubuntu-latest
    environment: sample

    steps:

      # checkout 
    - uses: actions/checkout@v3

      # Log into Azure
    - name: az-login
      uses: Azure/login@v1.4.6
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      # download fhir proxy bicep
    - name: download oss fhir proxy bicep file
      shell: bash
      run: |
        mkdir ${{ env.TEMP_DIR_PATH }}
        curl https://raw.githubusercontent.com/microsoft/fhir-proxy/main/templates/azuredeploy.bicep --output ${{ env.TEMP_DIR_PATH }}/${{ env.FHIR_PROXY_BICEP_NAME }}

      # ************* CHNANGED TO THE B2CFHIRPROXY
    - name: set-fhir-proxy-app-name
      id: set-fhir-proxy-app-name
      shell: bash
      run: |
        echo "::set-output name=fhirProxyAppName::b2cfhirproxy${{needs.deploy-infra-fhir-service.outputs.uniqueSuffix}}"

      # deploy using bicep
      # Note 1: Setting the params: fhirServerTenantName, fhirServerClientId, fhirServerSecret to empty string; the absence of these, 
      # tells the proxy to use its managed system identity (MSI) to authenicate with the fhir server.
      # Note 2: The 'resourceTags' param required.
      # Note 3: Format of fhir endpoint is always: 'https://${workspaceName}-${fhirName}.fhir.azurehealthcareapis.com', i.e. autogenerated  
    - name: deploy-fhir-proxy
      uses: azure/arm-deploy@v1.0.8
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ secrets.AZURE_B2C_RG }}
        template: ${{ env.TEMP_DIR_PATH }}/${{ env.FHIR_PROXY_BICEP_NAME }}
        parameters: 'fhirProxyName=${{steps.set-fhir-proxy-app-name.outputs.fhirProxyAppName}}
          uniqueValue=${{needs.deploy-infra-fhir-service.outputs.uniqueSuffix}} 
          fhirServerUrl=https://${{needs.deploy-infra-fhir-service.outputs.fhirWorkspaceName}}-${{needs.deploy-infra-fhir-service.outputs.fhirName}}${{env.FHIR_ENDPT_DOMAIN}}
          fhirServerResource=https://${{needs.deploy-infra-fhir-service.outputs.fhirWorkspaceName}}-${{needs.deploy-infra-fhir-service.outputs.fhirName}}${{env.FHIR_ENDPT_DOMAIN}}
          fhirServerClientId="" fhirServerSecret="" fhirServerTenantName="" resourceTags={}'           
        failOnStdErr: false
      
      # @TODO: Discovered a bug in the proxy, where if the  fhirClientId/Secret/TenantName is not set, then the proxy's appsettings to the Keyvault is broken the 
      # the proxy errors when called.  Need to build a script to remove those 3 values from app settings.
      #  az webapp config appsettings set -n "fhirproxy35d75573" -g "fhir-baseline-rg" --settings FS-CLIENT-ID=''
      #  az webapp config appsettings set -n "fhirproxy35d75573" -g "fhir-baseline-rg" --settings FS-TENANT-NAME=''
      #  az webapp config appsettings set -n "fhirproxy35d75573" -g "fhir-baseline-rg" --settings FS-SECRET=''
    - name: set-proxy-appsettings
      shell: bash
      run: |
        az webapp config appsettings set -n "${{steps.set-fhir-proxy-app-name.outputs.fhirProxyAppName}}" -g "${{secrets.AZURE_B2C_RG}}" --settings FS-CLIENT-ID=''
        az webapp config appsettings set -n "${{steps.set-fhir-proxy-app-name.outputs.fhirProxyAppName}}" -g "${{secrets.AZURE_B2C_RG}}" --settings FS-TENANT-NAME=''
        az webapp config appsettings set -n "${{steps.set-fhir-proxy-app-name.outputs.fhirProxyAppName}}" -g "${{secrets.AZURE_B2C_RG}}" --settings FS-SECRET=''

      # Leverage the proxy's MSI and assign it with 'FHIR Data Contributor' rbac role to the fhir server 
      # Based on the fhir-api.bicep fhir resource name is using a format of '${workspaceName}/${fhirName}'
      # format of the fhirs resource always: ${workspaceName}/${fhirName}
      # @TODO: consider moving this to complemetry bicep file  
    - name: fhir-server-role-assignments
      shell: bash
      run: |
        fhirProxyName=${{steps.set-fhir-proxy-app-name.outputs.fhirProxyAppName}}
        fhirServerResourceName='${{needs.deploy-infra-fhir-service.outputs.fhirWorkspaceName}}/${{needs.deploy-infra-fhir-service.outputs.fhirName}}' 
        
        fhirProxyMSIPrincipalId=$(az resource list --name "$fhirProxyName" --query "[].identity.principalId" -o tsv)        
        fhirServerResourceId=$(az resource list --name "$fhirServerResourceName" --query "[].id" -o tsv)

        unset fhirProxyName
        unset fhirServerResourceName

        echo "fhirProxyMSIPrincipalId = $fhirProxyMSIPrincipalId"
        echo "fhirServerResourceId = $fhirServerResourceId"

        az role assignment create \
            --assignee-object-id "$fhirProxyMSIPrincipalId" \
            --role "FHIR Data Writer" \
            --assignee-principal-type "ServicePrincipal" \
            --scope $fhirServerResourceId

    # @TODO: consider moving this to complemetry bicep file
    # - name: enable-b2c-fhir-proxy-ezauth
    #   shell: bash
    #   run: |
    #     az extension add --name authV2

    #     rg=${{secrets.AZURE_B2C_RG}}
    #     fhirProxyName=${{steps.set-fhir-proxy-app-name.outputs.fhirProxyAppName}}
    #     ezauthClientId=${{secrets.EZAUTH_FHIR_PROXY_AAD_CLIENTID}}
    #     ezauthClientSecret=${{secrets.EZAUTH_FHIR_PROXY_AAD_SECRET}}
    #     authorityTenandId=${{secrets.AZURE_TENANT_ID}}

    #     az webapp auth update -g "$rg" -n "$fhirProxyName" --enabled true --enable-token-store true \
    #       --redirect-provider AzureActiveDirectory \
    #       --unauthenticated-client-action=AllowAnonymous \
    #       --set globalValidation.requireAuthentication=false \
    #       --set identityProviders.azureActiveDirectory.registration.clientId=$ezauthClientId \
    #       --set identityProviders.azureActiveDirectory.registration.clientSecretSettingName=$ezauthClientSecret \
    #       --set identityProviders.azureActiveDirectory.registration.openIdIssuer=https://login.microsoftonline.com/$authorityTenandId/v2.0
